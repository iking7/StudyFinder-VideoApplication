{"ast":null,"code":"var _jsxFileName = \"/Users/isaacking/Desktop/JID Junior Design 2/Group Project/StudyFinder-VideoApplication/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this), document.getElementById('root')); // using node.js to import libraries and () creates the module.\n// const app = require(\"express\")();\n// const server = require(\"http\").createServer(app);\n// const cors = require(\"cors\");\n// const io = require(\"socket.io\")(server, {\n//     cors: {\n//         origin: \"*\",\n//         methods: [\"GET\", \"POST\"]\n//     }\n// });\n// app.use(cors());\n// //We set up the port which uniquely identifies a network transaction\n// //by specifying host and service. We use process.env.PORT incase\n// //we are deployed on a host server which sets our environment port\n// //for us.\n// const PORT = process.env.PORT || 5000;\n// //Here we use routing in express and match requests use\n// //the '/' root route path. Incoming requests (req) will be matched to\n// //our root directory where we will respond with the response (res)\n// //message.\n// app.get(\"/\", (req, res) => {\n//     res.send('Server is running.');\n// });\n// //We listen for the connection event to take place and when it\n// //does, we launch the socket function to transmit data in real-time.\n// io.on('connection', (socket) => {\n//     //You \n//     socket.emit('me', socket.id);\n//     socket.on('disconnect', () => {\n//        socket.broadcast.emit('Call ended');\n//     });\n//     socket.on(\"callUser\", ({ userToCall, signalData, from, name }) => {\n//         io.to(userToCall).emit(\"callUser\", { signal: signalData, from, name });\n//     });\n//     socket.on(\"answerCall\", (data) => {\n//        io.to(data.to).emit(\"callAccepted\", data.signal);\n//     });\n// });\n// //Allows us to listen for connections to our computer using our\n// //specified port number on our local network.\n// server.listen(PORT, () => console.log(`Server listening on port ${PORT}`));","map":{"version":3,"sources":["/Users/isaacking/Desktop/JID Junior Design 2/Group Project/StudyFinder-VideoApplication/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEAD,QAAQ,CAACE,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// using node.js to import libraries and () creates the module.\n// const app = require(\"express\")();\n// const server = require(\"http\").createServer(app);\n// const cors = require(\"cors\");\n// const io = require(\"socket.io\")(server, {\n//     cors: {\n//         origin: \"*\",\n//         methods: [\"GET\", \"POST\"]\n//     }\n// });\n\n// app.use(cors());\n\n// //We set up the port which uniquely identifies a network transaction\n// //by specifying host and service. We use process.env.PORT incase\n// //we are deployed on a host server which sets our environment port\n// //for us.\n// const PORT = process.env.PORT || 5000;\n\n// //Here we use routing in express and match requests use\n// //the '/' root route path. Incoming requests (req) will be matched to\n// //our root directory where we will respond with the response (res)\n// //message.\n// app.get(\"/\", (req, res) => {\n//     res.send('Server is running.');\n// });\n\n// //We listen for the connection event to take place and when it\n// //does, we launch the socket function to transmit data in real-time.\n// io.on('connection', (socket) => {\n//     //You \n//     socket.emit('me', socket.id);\n//     socket.on('disconnect', () => {\n//        socket.broadcast.emit('Call ended');\n//     });\n//     socket.on(\"callUser\", ({ userToCall, signalData, from, name }) => {\n//         io.to(userToCall).emit(\"callUser\", { signal: signalData, from, name });\n//     });\n//     socket.on(\"answerCall\", (data) => {\n//        io.to(data.to).emit(\"callAccepted\", data.signal);\n//     });\n// });\n\n// //Allows us to listen for connections to our computer using our\n// //specified port number on our local network.\n// server.listen(PORT, () => console.log(`Server listening on port ${PORT}`));"]},"metadata":{},"sourceType":"module"}